@model UnitedWayPrototypeApplication.Models.EmployeeModel

@{
    var emp = ViewData["Employee"] as UnitedWayPrototypeApplication.Models.EmployeeModel;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee Info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CWID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CWID, new { htmlAttributes = new { @class = "form-control", @Value = emp.CWID, @readonly = true } })
                @Html.ValidationMessageFor(model => model.CWID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeFirstName, new { htmlAttributes = new { @class = "form-control", @Value = emp.EmployeeFirstName, @readonly = true } })
                @Html.ValidationMessageFor(model => model.EmployeeFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeLastName, new { htmlAttributes = new { @class = "form-control", @Value = emp.EmployeeLastName, @readonly = true } })
                @Html.ValidationMessageFor(model => model.EmployeeLastName, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Continue", "CreateContribution", new { cwid = emp.CWID }, null)
</div>
<div>
    @Html.ActionLink("Back to List", "ContributionList")
</div>
