@model UnitedWayPrototypeApplication.Models.DepartmentModel

@{
    ViewBag.Title = "EditDepartment";
}

<h2>Edit Department</h2>

@{
    var dept = ViewData["Department"] as UnitedWayPrototypeApplication.Models.DepartmentModel;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.OrgCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.OrgCode, new { @readonly = true, @Value = dept.OrgCode })
            @Html.ValidationMessageFor(model => model.OrgCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control", @Value = dept.Division } })
            @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.departmentname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.departmentname, new { htmlAttributes = new { @class = "form-control", @Value = dept.departmentname } })
            @Html.ValidationMessageFor(model => model.departmentname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UWCoordinator3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UWCoordinator3, new { htmlAttributes = new { @class = "form-control", @Value = dept.UWCoordinator3 } })
            @Html.ValidationMessageFor(model => model.UWCoordinator3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UWCoordinator2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UWCoordinator2, new { htmlAttributes = new { @class = "form-control", @Value = dept.UWCoordinator2 } })
            @Html.ValidationMessageFor(model => model.UWCoordinator2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UWCoordinator1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UWCoordinator1, new { htmlAttributes = new { @class = "form-control", @Value = dept.UWCoordinator1 } })
            @Html.ValidationMessageFor(model => model.UWCoordinator1, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Department")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
