@model UnitedWayPrototypeApplication.Models.ContributionModel

<h2>Edit Contribution</h2>

@{
    var contr = ViewData["Contribution"] as UnitedWayPrototypeApplication.Models.ContributionModel;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ContributionID)

        <div class="form-group">
            @Html.LabelFor(model => model.CWID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CWID, new { htmlAttributes = new { @class = "form-control", @Value = contr.CWID } })
                @Html.ValidationMessageFor(model => model.CWID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgencyID, new { htmlAttributes = new { @class = "form-control", @Value = contr.AgencyID } })
                @Html.ValidationMessageFor(model => model.AgencyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UWType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UWType, new { htmlAttributes = new { @class = "form-control", @Value = contr.UWType } })
                @Html.ValidationMessageFor(model => model.UWType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control", @Value = contr.CheckNumber } })
                @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UWMonthly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UWMonthly, new { htmlAttributes = new { @class = "form-control", @Value = contr.UWMonthly } })
                @Html.ValidationMessageFor(model => model.UWMonthly, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UWMonths, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UWMonths, new { htmlAttributes = new { @class = "form-control", @Value = contr.UWMonths } })
                @Html.ValidationMessageFor(model => model.UWMonths, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UWYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UWYear, new { htmlAttributes = new { @class = "form-control", @Value = contr.UWYear } })
                @Html.ValidationMessageFor(model => model.UWYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ContributionList")
</div>
